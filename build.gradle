import java.text.SimpleDateFormat
import org.apache.tools.ant.filters.ReplaceTokens 

plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java-library'
	id 'org.sonatype.gradle.plugins.scan' version '1.2.0'
}

group = 'org.sonatype.cs'
version = '60'
sourceCompatibility = '8'

def bundledir = "successmetrics/successmetrics"

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.webjars:jquery:3.5.1'
	implementation 'org.webjars:bootstrap:4.5.0'
	implementation 'org.thymeleaf:thymeleaf:3.0.11.RELEASE'
	implementation 'org.xhtmlrenderer:flying-saucer-pdf:9.1.20'

	compileOnly 'com.opencsv:opencsv:5.2'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	
	/*
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	*/
}

nexusIQScan {
  username = 'admin'
  password = 'admin123'
  serverUrl = 'http://localhost:8070'
  applicationId = 'successmetrics'
  stage = 'build'  
  allConfigurations = true 
}

clean.doFirst {
	delete "${bundledir}"
	delete "${rootDir}/successmetrics"
	delete "${rootDir}/successmetrics.zip"
}

build.doFirst {
	mkdir "${bundledir}"
}

task copydependencies(type: Copy) {
  from configurations.default
  into 'build/dependencies'
}

task examples (type: Copy) {
	from 'releasefiles'
	include 'examples/'
	into "${bundledir}"
	filter(ReplaceTokens, tokens: [APPVER: project.version])
}

task release (type: Copy) {
	from 'build/libs', 'releasefiles'
	include '*.jar'
	include '*.json'
	include 'create*'
	include 'reports2/'
	into "${bundledir}"
	
	doLast {
  	new File("${bundledir}", 'runapp.bat').text = """
java -jar successmetrics-${version}.jar
"""
    }
}

task bundle(type: Zip) {
	from 'successmetrics'
	archiveName "successmetrics.zip"
	destinationDir(file(projectDir))
}

bundle.dependsOn release

/*
gradle clean build examples bundle
*/

